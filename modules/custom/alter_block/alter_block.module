<?php

/**
 * @file
 * Contains alter_block.module.
 */

/**
 * function preprocess block for social media pillars block
 * setup variables for citation
 */
function alter_block_preprocess_block__block_content__cf8209e7_dbe5_4f66_8146_5fc52de7832d(&$variables){
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $variables['site_name'] = \Drupal::config('system.site')->get('name');
    $variables['site_url'] = \Drupal::request()->getSchemeAndHttpHost() . \Drupal::request()->getRequestUri();
    $variables['nid'] = $node->id();
    $variables['node_title'] = $node->getTitle();
    $variables['created'] = $node->getCreatedTime();
    $variables['type'] = ucfirst(str_replace('_', ' ', $node->getType()));
    $variables['language'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
  }
}

/**
 * function preprocess block for custom block for type:
 * - fetch_from_api
 * - pass language variable to facet block
 */
function alter_block_preprocess_block(&$variables)
{

  // pass language variable to facet block
  if (isset($variables['content'][0]['#facet']) || isset($variables['content'][0][0]['#facet'])) {
    $variables['language'] = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
    $url = explode('/', \Drupal::request()->getRequestUri());
    $variables['is_layout'] = end($url) == 'layout' ? TRUE : FALSE;
  }

  if (isset($variables['content']['#block_content']))
  {
    $content = $variables['content']['#block_content'];

    // fetch results from external api and display new titles
    if( method_exists($content,'bundle') && $content->bundle() === 'fetch_from_api')
    {
      $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
      if (isset($variables['content']['field_link_to_api'][0]['#context']['value']) ) {
        $url =  $variables['content']['field_link_to_api'][0]['#context']['value'];
        $url = filter_var($url, FILTER_SANITIZE_URL);
        if (filter_var($url, FILTER_VALIDATE_URL) !== FALSE) {
          $client = \Drupal::httpClient();
          try {
            $request = $client->get($url);
            if ($request->getStatusCode() == '200') {
              $response = $request->getBody()->getContents();
              $data = json_decode($response, TRUE);
              $titles = '<ul>';
              $size = sizeof($data['result']['results']) < 6 ? sizeof($data['result']['results']) : 6;
              for ($x = 0; $x < $size; $x++) {
                $uuid = $data['result']['results'][$x]['id'];
                $title = $data['result']['results'][$x]['title_translated'][$langcode];
                $titles .= '<li>' . '<a href="/data/' . $langcode . '/dataset/' . $uuid . '">' . $title . '</a>' . '</li>';
              }
              $titles .= '</ul>';
              $variables['content']['body'][0]['#text'] = $titles;
              $view_all = '<a href="'
                . $variables['content']['field_view_all'][0]['#url']->getUri()
                . '">'
                . $variables['content']['field_view_all'][0]['#title']
                . '</a>';
              $variables['content']['body'][0]['#text'] .= $view_all;
            }
          }
          catch (Exception $e) {
            \Drupal::logger('fetch from api')->error('Unable to fetch from api for ' . $url
              . ' Exception: ' . $e->getMessage());
            return;
          }
        }
      }
    }
  }
}
