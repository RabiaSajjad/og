<?php

use \Drupal\node\Entity\Node;
use \Drupal\Component\Serialization\Json;
use \Drupal\Core\File\Exception\FileException;
use \Drupal\Core\File\FileSystemInterface;

/**
* @file
* Contains alter_field.module.
*/

/**
 * Read from organizations json file
 */
function read_options_from_json($field_name) {
  $options = [];
  try{
    $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
    if (is_object($field_name) && ($field_name->getName() == 'field_organization'))
      $field_name = 'organizations';

    // Load cached options, if exist
    if ($cache = \Drupal::cache()->get('ckan_' . $field_name . '_' . $langcode)) {
      $options = $cache->data;
      return $options;
    }

    $module_handler = \Drupal::service('module_handler');
    $module_path = $module_handler->getModule('og_ext_cron')->getPath();
    $filename = $module_path . '/choices/' . $field_name . '.json';

    if (file_exists($filename) && $contents = file_get_contents($filename)) {
      $data = Json::decode($contents);
      foreach ($data as $key => $row) {
        $options[$key] = is_array($row)? trim($row[$langcode]) : trim($row);
      }
      asort($options);

      // custom sorting for organizations
      // remove the numbered organizations from the top and place at bottom
      if ($field_name == 'organizations') {
        $orgs = [];
        foreach ($options as $key => $value) {
          if (is_numeric($value[0])) {
            $orgs[$key] = $value;
            unset($options[$key]);
          }
          else
            break;
        }
        $options += $orgs;
      }

      // Cache options
      \Drupal::cache()->set('ckan_' . $field_name . '_' . $langcode, $options);
    } else
      \Drupal::logger('read from json')->error('Unable to read ' . $field_name . ' from json choices file ');

  } catch (\Exception $e) {
    \Drupal::logger('read from json')->error('Unable to read ' . $field_name . ' from json choices file ' . ' ' . $e->getMessage());
  }

  return $options;
}
